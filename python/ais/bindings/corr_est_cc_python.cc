/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually
 * edited  */
/* The following lines can be configured to regenerate this file during cmake */
/* If manual edits are made, the following tags should be modified accordingly.
 */
/* BINDTOOL_GEN_AUTOMATIC(0) */
/* BINDTOOL_USE_PYGCCXML(0) */
/* BINDTOOL_HEADER_FILE(corr_est_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(51e2b8857329c49fcfbcff04bb34d60a) */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ais/corr_est_cc.h>
// pydoc.h is automatically generated in the build directory
#include <corr_est_cc_pydoc.h>

void bind_corr_est_cc(py::module &m) {

  using corr_est_cc = ::gr::ais::corr_est_cc;

  py::class_<corr_est_cc, gr::sync_block, gr::block, gr::basic_block,
             std::shared_ptr<corr_est_cc>>(m, "corr_est_cc", D(corr_est_cc))

      .def(py::init(&corr_est_cc::make), py::arg("symbols"), py::arg("sps"),
           py::arg("mark_delay"), py::arg("threshold") = 0.90000000000000002,
           D(corr_est_cc, make))

      .def("symbols", &corr_est_cc::symbols, D(corr_est_cc, symbols))

      .def("set_symbols", &corr_est_cc::set_symbols, py::arg("symbols"),
           D(corr_est_cc, set_symbols))

      ;
}
